{"version":3,"sources":["module.ios.ts"],"names":["NativeModules","RESULTS","uniq","RNP","RNPermissions","openSettings","check","permission","available","includes","UNAVAILABLE","request","options","checkNotifications","requestNotifications","checkMultiple","permissions","output","dedup","Promise","all","map","requestMultiple","index","length","module"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,cAA5B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AASA,SAAQC,IAAR,QAAmB,SAAnB;AAEA,MAAMC,GAaL,GAAGH,aAAa,CAACI,aAblB;;AAeA,eAAeC,YAAf,GAA6C;AAC3C,QAAMF,GAAG,CAACE,YAAJ,EAAN;AACD;;AAED,eAAeC,KAAf,CAAqBC,UAArB,EAAwE;AACtE,SAAOJ,GAAG,CAACK,SAAJ,CAAcC,QAAd,CAAuBF,UAAvB,IACHJ,GAAG,CAACG,KAAJ,CAAUC,UAAV,CADG,GAEHN,OAAO,CAACS,WAFZ;AAGD;;AAED,eAAeC,OAAf,CACEJ,UADF,EAEEK,OAFF,EAG6B;AAC3B,SAAOT,GAAG,CAACK,SAAJ,CAAcC,QAAd,CAAuBF,UAAvB,IACHJ,GAAG,CAACQ,OAAJ,CAAYJ,UAAZ,EAAwBK,OAAxB,CADG,GAEHX,OAAO,CAACS,WAFZ;AAGD;;AAED,OAAO,SAASG,kBAAT,GAA8D;AACnE,SAAOV,GAAG,CAACU,kBAAJ,EAAP;AACD;AAED,OAAO,SAASC,oBAAT,CACLF,OADK,EAE2B;AAChC,SAAOT,GAAG,CAACW,oBAAJ,CAAyBF,OAAzB,CAAP;AACD;;AAED,eAAeG,aAAf,CACEC,WADF,EAEgD;AAG9C,QAAMC,MAAuB,GAAG,EAAhC;AACA,QAAMC,KAAK,GAAGhB,IAAI,CAACc,WAAD,CAAlB;AAEA,QAAMG,OAAO,CAACC,GAAR,CACJF,KAAK,CAACG,GAAN,CAAU,MAAOd,UAAP,IAAiC;AACzCU,IAAAA,MAAM,CAACV,UAAD,CAAN,GAAqB,MAAMD,KAAK,CAACC,UAAD,CAAhC;AACD,GAFD,CADI,CAAN;AAMA,SAAOU,MAAP;AACD;;AAED,eAAeK,eAAf,CACEN,WADF,EAEgD;AAG9C,QAAMC,MAAuB,GAAG,EAAhC;AACA,QAAMC,KAAK,GAAGhB,IAAI,CAACc,WAAD,CAAlB;;AAEA,OAAK,IAAIO,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGL,KAAK,CAACM,MAAlC,EAA0CD,KAAK,EAA/C,EAAmD;AACjD,UAAMhB,UAAqB,GAAGW,KAAK,CAACK,KAAD,CAAnC;AACAN,IAAAA,MAAM,CAACV,UAAD,CAAN,GAAqB,MAAMI,OAAO,CAACJ,UAAD,CAAlC;AACD;;AAED,SAAOU,MAAP;AACD;;AAED,OAAO,MAAMQ,MAAgB,GAAG;AAC9BpB,EAAAA,YAD8B;AAE9BC,EAAAA,KAF8B;AAG9BK,EAAAA,OAH8B;AAI9BE,EAAAA,kBAJ8B;AAK9BC,EAAAA,oBAL8B;AAM9BC,EAAAA,aAN8B;AAO9BO,EAAAA;AAP8B,CAAzB","sourcesContent":["import {NativeModules} from 'react-native';\nimport {RESULTS} from './constants';\nimport {Contract} from './contract';\nimport {\n  NotificationOption,\n  NotificationsResponse,\n  Permission,\n  PermissionStatus,\n  RequestOptions,\n} from './types';\nimport {uniq} from './utils';\n\nconst RNP: {\n  available: Permission[];\n\n  checkNotifications: () => Promise<NotificationsResponse>;\n  requestNotifications: (\n    options: NotificationOption[],\n  ) => Promise<NotificationsResponse>;\n  openSettings: () => Promise<true>;\n  check: (permission: Permission) => Promise<PermissionStatus>;\n  request: (\n    permission: Permission,\n    options?: object,\n  ) => Promise<PermissionStatus>;\n} = NativeModules.RNPermissions;\n\nasync function openSettings(): Promise<void> {\n  await RNP.openSettings();\n}\n\nasync function check(permission: Permission): Promise<PermissionStatus> {\n  return RNP.available.includes(permission)\n    ? RNP.check(permission)\n    : RESULTS.UNAVAILABLE;\n}\n\nasync function request(\n  permission: Permission,\n  options?: RequestOptions,\n): Promise<PermissionStatus> {\n  return RNP.available.includes(permission)\n    ? RNP.request(permission, options)\n    : RESULTS.UNAVAILABLE;\n}\n\nexport function checkNotifications(): Promise<NotificationsResponse> {\n  return RNP.checkNotifications();\n}\n\nexport function requestNotifications(\n  options: NotificationOption[],\n): Promise<NotificationsResponse> {\n  return RNP.requestNotifications(options);\n}\n\nasync function checkMultiple<P extends Permission[]>(\n  permissions: P,\n): Promise<Record<P[number], PermissionStatus>> {\n  type Output = Record<P[number], PermissionStatus>;\n\n  const output: Partial<Output> = {};\n  const dedup = uniq(permissions);\n\n  await Promise.all(\n    dedup.map(async (permission: P[number]) => {\n      output[permission] = await check(permission);\n    }),\n  );\n\n  return output as Output;\n}\n\nasync function requestMultiple<P extends Permission[]>(\n  permissions: P,\n): Promise<Record<P[number], PermissionStatus>> {\n  type Output = Record<P[number], PermissionStatus>;\n\n  const output: Partial<Output> = {};\n  const dedup = uniq(permissions);\n\n  for (let index = 0; index < dedup.length; index++) {\n    const permission: P[number] = dedup[index];\n    output[permission] = await request(permission);\n  }\n\n  return output as Output;\n}\n\nexport const module: Contract = {\n  openSettings,\n  check,\n  request,\n  checkNotifications,\n  requestNotifications,\n  checkMultiple,\n  requestMultiple,\n};\n"]}